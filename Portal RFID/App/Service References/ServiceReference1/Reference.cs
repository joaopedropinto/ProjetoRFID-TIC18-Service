//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagRfidType", Namespace="http://schemas.datacontract.org/2004/07/PortalRFID")]
    [System.SerializableAttribute()]
    public partial class TagRfidType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AntValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EpcValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AntValue {
            get {
                return this.AntValueField;
            }
            set {
                if ((object.ReferenceEquals(this.AntValueField, value) != true)) {
                    this.AntValueField = value;
                    this.RaisePropertyChanged("AntValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EpcValue {
            get {
                return this.EpcValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EpcValueField, value) != true)) {
                    this.EpcValueField = value;
                    this.RaisePropertyChanged("EpcValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserValue {
            get {
                return this.UserValueField;
            }
            set {
                if ((object.ReferenceEquals(this.UserValueField, value) != true)) {
                    this.UserValueField = value;
                    this.RaisePropertyChanged("UserValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ILeitor")]
    public interface ILeitor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeitor/GetEcho", ReplyAction="http://tempuri.org/ILeitor/GetEchoResponse")]
        string GetEcho(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeitor/IsReaderOk", ReplyAction="http://tempuri.org/ILeitor/IsReaderOkResponse")]
        bool IsReaderOk(string ipPorta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeitor/GetTagsRfid", ReplyAction="http://tempuri.org/ILeitor/GetTagsRfidResponse")]
        System.Collections.Generic.List<WindowsFormsApplication1.ServiceReference1.TagRfidType> GetTagsRfid(int antNum, string ipPorta, string filtro, int tempoLeitura, bool readUser, int potenciaPadrao, int potenciaAntena1, int potenciaAntena2, int potenciaAntena3, int potenciaAntena4);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILeitorChannel : WindowsFormsApplication1.ServiceReference1.ILeitor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LeitorClient : System.ServiceModel.ClientBase<WindowsFormsApplication1.ServiceReference1.ILeitor>, WindowsFormsApplication1.ServiceReference1.ILeitor {
        
        public LeitorClient() {
        }
        
        public LeitorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LeitorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeitorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeitorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetEcho(string value) {
            return base.Channel.GetEcho(value);
        }
        
        public bool IsReaderOk(string ipPorta) {
            return base.Channel.IsReaderOk(ipPorta);
        }
        
        public System.Collections.Generic.List<WindowsFormsApplication1.ServiceReference1.TagRfidType> GetTagsRfid(int antNum, string ipPorta, string filtro, int tempoLeitura, bool readUser, int potenciaPadrao, int potenciaAntena1, int potenciaAntena2, int potenciaAntena3, int potenciaAntena4) {
            return base.Channel.GetTagsRfid(antNum, ipPorta, filtro, tempoLeitura, readUser, potenciaPadrao, potenciaAntena1, potenciaAntena2, potenciaAntena3, potenciaAntena4);
        }
    }
}
